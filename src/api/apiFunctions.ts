import { GenericRecord } from "@/types";
import { forgotPassword, getUser, loginUser, resetPassword } from "./auth";
import {
  getGroupsAll,
  getGroups,
  exportGroups,
  getMachines,
  exportMachines,
  getDevices,
  exportDevices,
  getDevicesTypes,
  getDevicesTypeInfos,
  getDevice,
  validateDevice,
  invalidateDevice,
  validateDevices,
  invalidateDevices,
  deleteDevices,
  requestDeleteDevices,
} from "./licenses";
import { updatePassword, updateProfile } from "./profile";
import {
  createPermission,
  createRole,
  createUser,
  deletePermission,
  deleteRole,
  deleteUser,
  getAllPermissions,
  getAllRoles,
  getPermission,
  getPermissions,
  getRole,
  getRoles,
  getUsers,
  updatePermission,
  updateRole,
} from "./security";

import {
  exportSearch,
  getDeviceTypeInfos,
  getDeviceTypes,
  getFactoryDeviceTypeInfos,
  getFactoryDeviceTypes,
  searchDevices,
  searchFactoryDevices,
} from "./search";
import {
  createPrinting,
  getPrinting,
  getPaginatedPrintings,
  updatePrinting,
  getPaginatedIps,
  deleteIp,
  deletePrinting,
  getPaginatedFactoryTypes,
  deleteFactoryType,
} from "./settings";
import {
  createFactoryClients,
  createFactoryModel,
  deleteFactoryClients,
  deleteFactoryDevice,
  deleteFactoryDispatchOrder,
  deleteFactoryModel,
  exportFactoryDevices,
  exportFactoryGroups,
  exportFactoryMachines,
  getFactoryClient,
  getFactoryClients,
  getFactoryClientsPaginated,
  getFactoryDevice,
  getFactoryDevices,
  getFactoryDispatchOrderClients,
  getFactoryDispatchOrderDeviceIds,
  getFactoryDispatchOrderManufacturerSerialNumbers,
  getFactoryDispatchOrderNumbers,
  getFactoryDispatchOrdersPaginated,
  getFactoryDispatchOrderTypes,
  getFactoryGroups,
  getFactoryGroupsAll,
  getFactoryMachines,
  getFactoryModel,
  getFactoryModelsPaginated,
  updateFactoryClients,
  updateFactoryModel,
} from "./factory";
import { deleteSpvClient, deleteSpvDispatchOrder, getPaginatedSpvClients, getSpvDispatchOrderSearchClients, getSpvDispatchOrderSearchNumbers, getSpvDispatchOrderSearchTypes, getSpvDispatchOrdersPaginated } from "./spv";
import { getFactoryFilterClientNumbers, getFactoryFilterClients, getFactoryFilterDispatchOrders, getFactoryFilterFactoryIds, getFactoryFilterFactoryMachineSerialNumbers, getFactoryFilterIds, getFactoryFilterMachineSerialNumbers, getFactoryFilterManufacturerSerialNumbers, getFactoryFilterProductDefinitions, getFactoryFilterRPIs, getFactoryFilterSerialNumbers, getFactoryFilterSpareOrders, getFactoryFilterTypeInfos, getFactoryFilterTypes, getFilterClientNumbers, getFilterClients, getFilterDispatchOrders, getFilterFactoryIds, getFilterGroupIds, getFilterIds, getFilterMachineSerialNumbers, getFilterManufacturerSerialNumbers, getFilterProductDefinitions, getFilterRPIs, getFilterSpareOrders, getFilterTypeInfos, getFilterTypes, getSerialNumbers } from "./filters";
import { deleteOwnersRule, deleteValidationRule, deleteValidationSerialRepeatedRule, getOwners, getOwnersRules, getOwnersValidationsReport, getValidationRules, getValidationRulesResult, getValidationSerialRepeatedRules, getValidationsReport } from "./validations";

export const apiFunctions = {
  security: {
    getUsers: getUsers,
    createUser: createUser,
    deleteUser: deleteUser,
    getRoles: getRoles,
    getAllRoles: getAllRoles,
    getRole: getRole,
    createRole: createRole,
    updateRole: updateRole,
    deleteRole: deleteRole,
    getPermissions: getPermissions,
    getAllPermissions: getAllPermissions,
    getPermission: getPermission,
    createPermission: createPermission,
    updatePermission: updatePermission,
    deletePermission: deletePermission,
  },
  auth: {
    loginUser: loginUser,
    forgotPassword: forgotPassword,
    resetPassword: resetPassword,
    getUser: getUser,
  },
  profile: {
    updatePassword: updatePassword,
    updateProfile: updateProfile,
  },
  licenses: {
    getGroups: getGroups,
    getGroupsAll: getGroupsAll,
    exportGroups: exportGroups,
    getMachines: getMachines,
    exportMachines: exportMachines,
    getDevices: getDevices,
    getDevice: getDevice,
    exportDevices: exportDevices,
    getDevicesTypes: getDevicesTypes,
    getDevicesTypeInfos: getDevicesTypeInfos,
    invalidateDevice: invalidateDevice,
    validateDevice: validateDevice,
    validateDevices: validateDevices,
    invalidateDevices: invalidateDevices,
    deleteDevices: deleteDevices,
    requestDeleteDevices: requestDeleteDevices,
  },
  search: {
    searchDevices: searchDevices,
    getDeviceTypes: getDeviceTypes,
    getDeviceTypeInfos: getDeviceTypeInfos,
    searchFactoryDevices: searchFactoryDevices,
    exportSearch: exportSearch
  },
  settings: {
    getPaginatedPrintings: getPaginatedPrintings,
    getPrinting: getPrinting,
    updatePrinting: updatePrinting,
    createPrinting: createPrinting,
    deletePrinting: deletePrinting,

    getPaginatedIps: getPaginatedIps,
    deleteIp: deleteIp,

    getFactoryClients: getFactoryClients,
    getFactoryClientsPaginated: getFactoryClientsPaginated,
    getFactoryClient: getFactoryClient,
    createFactoryClients: createFactoryClients,
    updateFactoryClients: updateFactoryClients,
    deleteFactoryClients: deleteFactoryClients,

    getPaginatedFactoryTypes: getPaginatedFactoryTypes,
    deleteFactoryType: deleteFactoryType,
    deleteFactoryDispatchOrder: deleteFactoryDispatchOrder,

    getFactoryModelsPaginated: getFactoryModelsPaginated,
    getFactoryModel: getFactoryModel,
    createFactoryModel: createFactoryModel,
    updateFactoryModel: updateFactoryModel,
    deleteFactoryModel: deleteFactoryModel,
  },
  factoryDispatchOrders: {
    getFactoryDispatchOrdersPaginated: getFactoryDispatchOrdersPaginated,
    getPrinting: getPrinting,
    updatePrinting: updatePrinting,
    createPrinting: createPrinting,
    deletePrinting: deletePrinting,

    getPaginatedIps: getPaginatedIps,
    deleteIp: deleteIp,
  },
  factory: {
    getFactoryGroups: getFactoryGroups,
    getFactoryGroupsAll: getFactoryGroupsAll,
    exportFactoryGroups: exportFactoryGroups,
    getFactoryMachines: getFactoryMachines,
    exportFactoryMachines: exportFactoryMachines,
    getFactoryDevices: getFactoryDevices,
    getFactoryDevice: getFactoryDevice,
    exportFactoryDevices: exportFactoryDevices,
    getFactoryDeviceTypes: getFactoryDeviceTypes,
    getFactoryDeviceTypeInfos: getFactoryDeviceTypeInfos,
    deleteFactoryDevice: deleteFactoryDevice,
    getFactoryDispatchOrderNumbers: getFactoryDispatchOrderNumbers,
    getFactoryDispatchOrderTypes: getFactoryDispatchOrderTypes,
    getFactoryDispatchOrderManufacturerSerialNumbers: getFactoryDispatchOrderManufacturerSerialNumbers,
    getFactoryDispatchOrderDeviceIds: getFactoryDispatchOrderDeviceIds,
    getFactoryDispatchOrderClients: getFactoryDispatchOrderClients,
  },
  filters: {
    getFactoryFilterTypes: getFactoryFilterTypes,
    getFactoryFilterTypeInfos: getFactoryFilterTypeInfos,
    getFactoryFilterIds: getFactoryFilterIds,
    getFactoryFilterProductDefinitions: getFactoryFilterProductDefinitions,
    getFactoryFilterManufacturerSerialNumbers: getFactoryFilterManufacturerSerialNumbers,
    getFactoryFilterSpareOrders: getFactoryFilterSpareOrders,
    getFactoryFilterClientNumbers: getFactoryFilterClientNumbers,
    getFactoryFilterMachineSerialNumbers: getFactoryFilterMachineSerialNumbers,
    getFactoryFilterRPIs: getFactoryFilterRPIs,
    getFactoryFilterClients: getFactoryFilterClients,
    getFactoryFilterFactoryIds: getFactoryFilterFactoryIds,
    getFactoryFilterDispatchOrders: getFactoryFilterDispatchOrders,
    getFactoryFilterSerialNumbers: getFactoryFilterSerialNumbers,
    getFactoryFilterFactoryMachineSerialNumbers: getFactoryFilterFactoryMachineSerialNumbers,

    getFilterTypes: getFilterTypes,
    getFilterTypeInfos: getFilterTypeInfos,
    getFilterIds: getFilterIds,
    getFilterProductDefinitions: getFilterProductDefinitions,
    getFilterManufacturerSerialNumbers: getFilterManufacturerSerialNumbers,
    getFilterSpareOrders: getFilterSpareOrders,
    getFilterClientNumbers: getFilterClientNumbers,
    getFilterMachineSerialNumbers: getFilterMachineSerialNumbers,
    getFilterRPIs: getFilterRPIs,
    getFilterClients: getFilterClients,
    getFilterFactoryIds: getFilterFactoryIds,
    getFilterDispatchOrders: getFilterDispatchOrders,
    getSerialNumbers: getSerialNumbers,
    getFilterGroupIds: getFilterGroupIds,
  },
  spvDispatchOrders: {
    getSpvDispatchOrdersPaginated: getSpvDispatchOrdersPaginated,
    getSpvDispatchOrderSearchTypes: getSpvDispatchOrderSearchTypes,
    getSpvDispatchOrderSearchNumbers: getSpvDispatchOrderSearchNumbers,
    getSpvDispatchOrderSearchClients: getSpvDispatchOrderSearchClients,
    deleteSpvDispatchOrder: deleteSpvDispatchOrder,
  },
  spv: {
    getPaginatedSpvClients: getPaginatedSpvClients,
    deleteSpvClient: deleteSpvClient
  },
  validations: {
    getOwnersRules: getOwnersRules,
    deleteOwnersRule: deleteOwnersRule,
    getValidationRules: getValidationRules,
    deleteValidationRule: deleteValidationRule,
    getValidationRulesResult: getValidationRulesResult,
    getValidationSerialRepeatedRules: getValidationSerialRepeatedRules,
    deleteValidationSerialRepeatedRule: deleteValidationSerialRepeatedRule,
    getOwnersValidationsReport: getOwnersValidationsReport,
    getOwners: getOwners,
    getValidationsReport: getValidationsReport,
  }
};
type ApiFunctions = typeof apiFunctions;
type Api = keyof ApiFunctions;
type ApiFunctionResponse = (...args: any[]) => Promise<GenericRecord>; // eslint-disable-line

export const getApiFunction = (token: string): ApiFunctionResponse => {
  const [api, func] = token.split(".");
  return (apiFunctions[api as Api] as GenericRecord)[func];
};
